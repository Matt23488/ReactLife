{"version":3,"sources":["Life/api.ts","Life/StaffordOneLife.ts","Game.ts","Life/Patterns.ts","Life/LifeView.ts","LifeComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LifeRect","cornerOrX","widthOrY","heightOrWidth","height","corner","width","this","x","y","Triplet","triplet","_triplet","_lnm","_mnm","_rnm","_lnext","_mnext","_rnext","b","_lcm","_mcm","_rcm","_lcur","_mcur","_rcur","_lcountm","_lcount","_mcountm","_mcount","_rcountm","_rcount","middleCurrentRaw","leftCountRaw","middleCountRaw","leftCurrentRaw","rightCurrentRaw","rightCountRaw","c","_rcountone","_mcountone","_lcountone","_currentm","_nextm","currentState","nextState","StaffordOneLife","_width","_height","_triplets","_changes","clear","tx","Math","floor","t","leftCurrent","uup","ppu","setLeftCurrent","middleCurrent","ppp","setMiddleCurrent","rightCurrent","upp","puu","setRightCurrent","uum","mmu","mmm","umm","muu","isValidPoint","value","becomeAlive","push","becomeDead","currentChanges","cx","cy","minx","max","maxx","min","miny","maxy","lc","leftCount","mc","middleCount","rc","rightCount","setLeftNext","setMiddleNext","setRightNext","changed","leftNext","middleNext","rightNext","rect","setPixel","xmin","xmax","ymin","ymax","get","Game","renderTime","limitTick","_limitTick","_lastRenderTime","_lastTickTime","_doLoop","time","deltaRenderTime","deltaTickTime","tick","render","window","requestAnimationFrame","loop","bind","PlaintextPattern","plaintext","_plaintext","life","lines","split","filter","line","startsWith","set","RLEPattern","rle","_rle","map","trim","len","Number","i","allPatterns","acorn","beehive","blinker","block","boat","bookends","canadagoose","glider","honeyfarm","hwss","lwss","mwss","pond","puffer1","puffer2","pulsar","rpentomino","snake","spider","trafficlight","tub","aliveColor","LifeView","canvas","_canvas","_maxScale","_minScale","_scale","_gridScale","_corner","_life","_dragging","_dragStart","document","getElementById","lifeHeight","pattern","addEventListener","onWindowResize","onScroll","onKeyDown","onMouseDown","onMouseMove","onMouseUp","draw","running","step","drawDisplay","clientWidth","clientHeight","lifeWidth","ev","key","screenshot","stop","start","v","bitmapToLife","deltaY","zoomIn","zoomOut","clientX","clientY","current","ctx","fillStyle","fillRect","clearDisplay","drawBlocks","drawPixels","gridEnabled","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","lifeRect","p","lifeToBitmap","isValidBitmapPoint","drawGrid","data","getImageData","rgb","color","withoutHash","slice","arr","length","charAt","repeat","hexStringToArr","putImageData","url","toDataURL","replace","downloadLink","createElement","setAttribute","click","getContext","add","l","scaleUp","scaleDown","LifeComponent","props","state","selectedPattern","lifeData","target","setState","tickTime","isNaN","className","id","onChange","onPatternChange","Object","keys","type","onRenderTimeChange","onClick","onReset","onToggleRunning","onStepForward","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3f429e07.chunk.js","sourcesContent":["export interface Life {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    clear: () => void;\r\n    get: (x: number, y: number) => boolean;\r\n    set: (x: number, y: number, alive: boolean) => void;\r\n    draw: (rect: LifeRect, setPixel: (v: LifePoint) => void) => void;\r\n    step: () => void;\r\n}\r\n\r\nexport interface Point {\r\n    readonly x: number;\r\n    readonly y: number;\r\n}\r\n\r\nexport type LifePoint = Point;\r\n\r\nexport class LifeRect {\r\n    public readonly corner: LifePoint;\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n\r\n    public constructor(corner: LifePoint, width: number, height: number)\r\n    public constructor(x: number, y: number, width: number, height: number)\r\n    public constructor(cornerOrX: LifePoint | number, widthOrY: number, heightOrWidth: number, height?: number) {\r\n        if (typeof cornerOrX === 'number') {\r\n            this.corner = { x: cornerOrX, y: widthOrY };\r\n            this.width = heightOrWidth;\r\n            this.height = height!;\r\n        } else {\r\n            this.corner = cornerOrX;\r\n            this.width = widthOrY;\r\n            this.height = heightOrWidth;\r\n        }\r\n    }\r\n\r\n    public get x() { return this.corner.x; }\r\n    public get y() { return this.corner.y; }\r\n}","import { Life, LifePoint, LifeRect } from './api';\r\n\r\nclass Triplet {\r\n    private _triplet: number;\r\n    public constructor(triplet: number) {\r\n        this._triplet = triplet;\r\n    }\r\n\r\n    // Bit numbers\r\n    private static readonly _lnext = 14;\r\n    private static readonly _mnext = 13;\r\n    private static readonly _rnext = 12;\r\n    private static readonly _lcur = 11;\r\n    private static readonly _mcur = 10;\r\n    private static readonly _rcur = 9;\r\n    private static readonly _lcount = 6;\r\n    private static readonly _mcount = 3;\r\n    private static readonly _rcount = 0;\r\n\r\n    // Bit masks\r\n    private static readonly _lnm = 1 << Triplet._lnext;\r\n    private static readonly _mnm = 1 << Triplet._mnext;\r\n    private static readonly _rnm = 1 << Triplet._rnext;\r\n    private static readonly _lcm = 1 << Triplet._lcur;\r\n    private static readonly _mcm = 1 << Triplet._mcur;\r\n    private static readonly _rcm = 1 << Triplet._rcur;\r\n    private static readonly _lcountm = 7 << Triplet._lcount;\r\n    private static readonly _mcountm = 7 << Triplet._mcount;\r\n    private static readonly _rcountm = 7 << Triplet._rcount;\r\n\r\n    // Getters and setters\r\n    public get leftNext() { return (Triplet._lnm & this._triplet) !== 0; }\r\n    public get middleNext() { return (Triplet._mnm & this._triplet) !== 0; }\r\n    public get rightNext() { return (Triplet._rnm & this._triplet) !== 0; }\r\n\r\n    public get leftNextRaw() { return (this._triplet & Triplet._lnm) >> Triplet._lnext; }\r\n    public get middleNextRaw() { return (this._triplet & Triplet._mnm) >> Triplet._mnext; }\r\n    public get rightNextRaw() { return (this._triplet & Triplet._rnm) >> Triplet._rnext; }\r\n\r\n    public setLeftNext(b: boolean) { return new Triplet(b ? (Triplet._lnm | this._triplet) : (~Triplet._lnm & this._triplet)); }\r\n    public setMiddleNext(b: boolean) { return new Triplet(b ? (Triplet._mnm | this._triplet) : (~Triplet._mnm & this._triplet)); }\r\n    public setRightNext(b: boolean) { return new Triplet(b ? (Triplet._rnm | this._triplet) : (~Triplet._rnm & this._triplet)); }\r\n\r\n    public get leftCurrent() { return (Triplet._lcm & this._triplet) !== 0; }\r\n    public get middleCurrent() { return (Triplet._mcm & this._triplet) !== 0; }\r\n    public get rightCurrent() { return (Triplet._rcm & this._triplet) !== 0; }\r\n\r\n    public get leftCurrentRaw() { return (this._triplet & Triplet._lcm) >> Triplet._lcur; }\r\n    public get middleCurrentRaw() { return (this._triplet & Triplet._mcm) >> Triplet._mcur; }\r\n    public get rightCurrentRaw() { return (this._triplet & Triplet._rcm) >> Triplet._rcur; }\r\n\r\n    public setLeftCurrent(b: boolean) { return new Triplet(b ? (Triplet._lcm | this._triplet) : (~Triplet._lcm & this._triplet)); }\r\n    public setMiddleCurrent(b: boolean) { return new Triplet(b ? (Triplet._mcm | this._triplet) : (~Triplet._mcm & this._triplet)); }\r\n    public setRightCurrent(b: boolean) { return new Triplet(b ? (Triplet._rcm | this._triplet) : (~Triplet._rcm & this._triplet)); }\r\n\r\n    public get leftCountRaw() { return (Triplet._lcountm & this._triplet) >> Triplet._lcount; }\r\n    public get middleCountRaw() { return (Triplet._mcountm & this._triplet) >> Triplet._mcount; }\r\n    public get rightCountRaw() { return (Triplet._rcountm & this._triplet) >> Triplet._rcount; }\r\n\r\n    public get leftCount() { return this.middleCurrentRaw+ this.leftCountRaw; }\r\n    public get middleCount() { return this.middleCountRaw + this.leftCurrentRaw + this.rightCurrentRaw; }\r\n    public get rightCount() { return this.middleCurrentRaw + this.rightCountRaw; }\r\n\r\n    public setLeftCountRaw(c: number) { return new Triplet((c << Triplet._lcount) | (~Triplet._lcountm & this._triplet)); }\r\n    public setMiddleCountRaw(c: number) { return new Triplet((c << Triplet._mcount) | (~Triplet._mcountm & this._triplet)); }\r\n    public setRightCountRaw(c: number) { return new Triplet((c << Triplet._rcount) | (~Triplet._rcountm & this._triplet)); }\r\n\r\n    private static readonly _lcountone = 1 << Triplet._lcount;\r\n    private static readonly _mcountone = 1 << Triplet._mcount;\r\n    private static readonly _rcountone = 1 << Triplet._rcount;\r\n    public get uup() { return new Triplet(Triplet._rcountone + this._triplet); }\r\n    public get uum() { return new Triplet(-Triplet._rcountone + this._triplet); }\r\n    public get upu() { return new Triplet(Triplet._mcountone + this._triplet); }\r\n    public get upp() { return new Triplet(Triplet._mcountone + Triplet._rcountone + this._triplet); }\r\n    public get umu() { return new Triplet(-Triplet._mcountone + this._triplet); }\r\n    public get umm() { return new Triplet(-Triplet._mcountone - Triplet._rcountone + this._triplet); }\r\n    public get puu() { return new Triplet(Triplet._lcountone + this._triplet); }\r\n    public get pum() { return new Triplet(Triplet._lcountone - Triplet._rcountone + this._triplet); }\r\n    public get ppu() { return new Triplet(Triplet._lcountone + Triplet._mcountone + this._triplet); }\r\n    public get ppp() { return new Triplet(Triplet._lcountone + Triplet._mcountone + Triplet._rcountone + this._triplet); }\r\n    public get muu() { return new Triplet(-Triplet._lcountone + this._triplet); }\r\n    public get mup() { return new Triplet(-Triplet._lcountone + Triplet._rcountone + this._triplet); }\r\n    public get mmu() { return new Triplet(-Triplet._lcountone - Triplet._mcountone + this._triplet); }\r\n    public get mmm() { return new Triplet(-Triplet._lcountone - Triplet._mcountone - Triplet._rcountone + this._triplet); }\r\n\r\n    private static readonly _currentm = Triplet._lcm | Triplet._mcm | Triplet._rcm;\r\n    private static readonly _nextm = Triplet._lnm | Triplet._mnm | Triplet._rnm;\r\n    public get currentState() { return (Triplet._currentm & this._triplet) >> Triplet._rcur; }\r\n    public get nextState() { return (Triplet._nextm & this._triplet) >> Triplet._rnext; }\r\n    public get changed() { return this.currentState !== this.nextState; }\r\n}\r\n\r\nexport default class StaffordOneLife implements Life {\r\n    private readonly _width = 88;\r\n    private readonly _height = 258;\r\n    private _triplets: Triplet[][] = [];\r\n    private _changes: [number, number][] = [];\r\n\r\n    public constructor() { this.clear(); }\r\n    public clear() {\r\n        this._triplets = [];\r\n        this._changes = [];\r\n\r\n        for (let x = 0; x < this._width; x++) {\r\n            this._triplets[x] = [];\r\n            for (let y = 0; y < this._height; y++) {\r\n                this._triplets[x][y] = new Triplet(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get width() { return this._width * 3; }\r\n    public get height() { return this._height; }\r\n\r\n    private isValidPoint(x: number, y: number) { return 1 <= x && x < (this._width - 1) * 3 && 1 <= y && y < this._height - 1; }\r\n\r\n    private becomeAlive(x: number, y: number) {\r\n        const tx = Math.floor(x / 3);\r\n        const t = this._triplets[tx][y];\r\n        switch (x % 3) {\r\n            case 0:\r\n                if (t.leftCurrent) return false;\r\n                this._triplets[tx - 1][y - 1] = this._triplets[tx - 1][y - 1].uup;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].ppu;\r\n                this._triplets[tx - 1][y] = this._triplets[tx - 1][y].uup;\r\n                this._triplets[tx][y] = t.setLeftCurrent(true);\r\n                this._triplets[tx - 1][y + 1] = this._triplets[tx - 1][y + 1].uup;\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].ppu;\r\n                break;\r\n            case 1:\r\n                if (t.middleCurrent) return false;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].ppp;\r\n                this._triplets[tx][y] = t.setMiddleCurrent(true);\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].ppp;\r\n                break;\r\n            case 2:\r\n                if (t.rightCurrent) return false;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].upp;\r\n                this._triplets[tx + 1][y - 1] = this._triplets[tx + 1][y - 1].puu;\r\n                this._triplets[tx][y] = t.setRightCurrent(true);\r\n                this._triplets[tx + 1][y] = this._triplets[tx + 1][y].puu;\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].upp;\r\n                this._triplets[tx + 1][y + 1] = this._triplets[tx + 1][y + 1].puu;\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private becomeDead(x: number, y: number) {\r\n        const tx = Math.floor(x / 3);\r\n        const t = this._triplets[tx][y];\r\n        switch (x % 3) {\r\n            case 0:\r\n                if (!t.leftCurrent) return false;\r\n                this._triplets[tx - 1][y - 1] = this._triplets[tx - 1][y - 1].uum;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].mmu;\r\n                this._triplets[tx - 1][y] = this._triplets[tx - 1][y].uum;\r\n                this._triplets[tx][y] = t.setLeftCurrent(false);\r\n                this._triplets[tx - 1][y + 1] = this._triplets[tx - 1][y + 1].uum;\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].mmu;\r\n                break;\r\n            case 1:\r\n                if (!t.middleCurrent) return false;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].mmm;\r\n                this._triplets[tx][y] = t.setMiddleCurrent(false);\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].mmm;\r\n                break;\r\n            case 2:\r\n                if (!t.rightCurrent) return false;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].umm;\r\n                this._triplets[tx + 1][y - 1] = this._triplets[tx + 1][y - 1].muu;\r\n                this._triplets[tx][y] = t.setRightCurrent(false);\r\n                this._triplets[tx + 1][y] = this._triplets[tx + 1][y].muu;\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].umm;\r\n                this._triplets[tx + 1][y + 1] = this._triplets[tx + 1][y + 1].muu;\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public get(x: number, y: number) {\r\n        if (!this.isValidPoint(x, y)) return false;\r\n\r\n        const t = this._triplets[Math.floor(x / 3)][y];\r\n        switch (x % 3) {\r\n            case 0: return t.leftCurrent;\r\n            case 1: return t.middleCurrent;\r\n            case 2: return t.rightCurrent;\r\n        }\r\n\r\n        // This will never be hit but tsc is being dumb\r\n        return false;\r\n    }\r\n\r\n    public set(x: number, y: number, value: boolean) {\r\n        if (!this.isValidPoint(x, y)) return;\r\n\r\n        if (value) {\r\n            if (this.becomeAlive(x, y)) this._changes.push([Math.floor(x / 3), y]);\r\n        } else {\r\n            if (this.becomeDead(x, y)) this._changes.push([Math.floor(x / 3), y]);\r\n        }\r\n    }\r\n\r\n    public step() {\r\n        const currentChanges: [number, number][] = [];\r\n        for (let [cx, cy] of this._changes) {\r\n            const minx = Math.max(cx - 1, 1);\r\n            const maxx = Math.min(cx + 2, this._width - 1);\r\n            const miny = Math.max(cy - 1, 1);\r\n            const maxy = Math.min(cy + 2, this._height - 1);\r\n            for (let y = miny; y < maxy; y++) {\r\n                for (let x = minx; x < maxx; x++) {\r\n                    const c = this._triplets[x][y];\r\n                    let t = c;\r\n                    const lc = t.leftCount;\r\n                    const mc = t.middleCount;\r\n                    const rc = t.rightCount;\r\n                    t = t.setLeftNext(lc === 3 || (t.leftCurrent && lc === 2));\r\n                    t = t.setMiddleNext(mc === 3 || (t.middleCurrent && mc === 2));\r\n                    t = t.setRightNext(rc === 3 || (t.rightCurrent && rc === 2));\r\n                    if (t.changed) {\r\n                        currentChanges.push([x, y]);\r\n                        this._triplets[x][y] = t;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._changes = [];\r\n\r\n        for (let [x, y] of currentChanges) {\r\n            const t = this._triplets[x][y];\r\n            if (!t.changed) continue;\r\n\r\n            if (t.leftNext) this.becomeAlive(x * 3, y);\r\n            else this.becomeDead(x * 3, y);\r\n            if (t.middleNext) this.becomeAlive(x * 3 + 1, y);\r\n            else this.becomeDead(x * 3 + 1, y);\r\n            if (t.rightNext) this.becomeAlive(x * 3 + 2, y);\r\n            else this.becomeDead(x * 3 + 2, y);\r\n            this._changes.push([x, y]);\r\n        }\r\n    }\r\n\r\n    public draw(rect: LifeRect, setPixel: (v: LifePoint) => void) {\r\n        const xmin = Math.max(0, rect.x);\r\n        const xmax = Math.min(this._width * 3, rect.x + rect.width);\r\n        const ymin = Math.max(0, rect.y - rect.height + 1);\r\n        const ymax = Math.min(this._height, rect.y + 1);\r\n        for (let y = ymin; y < ymax; y++) for (let x = xmin; x < xmax; x++) if (this.get(x, y)) setPixel({ x, y });\r\n    }\r\n}","// TODO: Pull in the canvas stuff, but right now it's so tied to the LifeView class\r\n// that I'm too lazy to separate it\r\nexport default abstract class Game {\r\n    public renderTime: number;\r\n    private readonly _limitTick: boolean;\r\n    private _lastRenderTime = 0;\r\n    private _lastTickTime = 0;\r\n\r\n    protected constructor(renderTime: number, limitTick = false) {\r\n        this.renderTime = renderTime;\r\n        this._limitTick = limitTick;\r\n    }\r\n\r\n    protected abstract render(deltaRenderTime: number): void;\r\n    protected abstract tick(deltaTickTime: number): void;\r\n\r\n    private loop(time: number) {\r\n        const deltaRenderTime = time - this._lastRenderTime;\r\n        const deltaTickTime = time - this._lastTickTime;\r\n        if (!this._limitTick) {\r\n            this.tick(deltaTickTime);\r\n            this._lastTickTime = time;\r\n        }\r\n        if (deltaRenderTime >= this.renderTime) {\r\n            if (this._limitTick) {\r\n                this.tick(deltaTickTime);\r\n                this._lastTickTime = time;\r\n            }\r\n            this.render(deltaRenderTime);\r\n            this._lastRenderTime = time;\r\n        }\r\n        if (this._doLoop) window.requestAnimationFrame(this.loop.bind(this));\r\n    }\r\n\r\n    private _doLoop = false;\r\n    public get running() { return this._doLoop; }\r\n\r\n    public start() {\r\n        this._doLoop = true;\r\n        window.requestAnimationFrame(this.loop.bind(this));\r\n    }\r\n\r\n    public stop() {\r\n        this._doLoop = false;\r\n    }\r\n}","import { Life, LifePoint } from './api';\r\n\r\nexport interface Pattern {\r\n    add: (life: Life, corner: LifePoint) => void;\r\n}\r\n\r\nclass PlaintextPattern implements Pattern {\r\n    // The plaintext Life pattern format is described here: https://www.conwaylife.com/wiki/Plaintext\r\n    // Briefly:\r\n    // ! indicates a comment\r\n    // O is a living cell\r\n    // . is a dead cell\r\n    // Rows are indicated by line breaks\r\n    private readonly _plaintext: string;\r\n\r\n    public constructor(plaintext: string) {\r\n        this._plaintext = plaintext;\r\n    }\r\n\r\n    add(life: Life, corner: LifePoint) {\r\n        var lines = this._plaintext.split(/\\r?\\n/).filter(line => !line.startsWith('!'));\r\n        let y = corner.y;\r\n        for (let line of lines) {\r\n            let x = corner.x;\r\n            for (let c of line) {\r\n                if (c === 'O') life.set(x, y, true);\r\n                x++;\r\n            }\r\n            y--;\r\n        }\r\n    }\r\n}\r\n\r\nclass RLEPattern implements Pattern {\r\n    // The RLE Life pattern format is described here: https://www.conwaylife.com/wiki/Run_Length_Encoded\r\n    // Briefly:\r\n    // # indicates a comment\r\n    // \"x = n, y = n\" gives the bounding box of the pattern.\r\n    // A number followed by b or o indicates that number of dead or\r\n    // alive cells, respectively, and the number may be omitted if the number is one.\r\n    // A number followed by $ is a newline, and again, it may bo omitted if one.\r\n    // ! is the end of the pattern.\r\n    private readonly _rle: string;\r\n    public constructor(rle: string) {\r\n        this._rle = rle;\r\n    }\r\n\r\n    public add(life: Life, corner: LifePoint) {\r\n        const lines = this._rle.split(/\\r?\\n/)\r\n            .map(line => line.trim())\r\n            .filter(line => !line.startsWith('#') && !line.startsWith('x'));\r\n        \r\n        let { x, y } = corner;\r\n        let len = 0;\r\n        for (let line of lines) {\r\n            for (let c of line) {\r\n                switch (c) {\r\n                    case '0':\r\n                    case '1':\r\n                    case '2':\r\n                    case '3':\r\n                    case '4':\r\n                    case '5':\r\n                    case '6':\r\n                    case '7':\r\n                    case '8':\r\n                    case '9':\r\n                        len = len * 10 + Number(c);\r\n                        break;\r\n                    case 'b':\r\n                        x += Math.max(len, 1);\r\n                        len = 0;\r\n                        break;\r\n                    case 'o':\r\n                        len = Math.max(len, 1);\r\n                        for (let i = 0; i < len; i++) life.set(x + i, y, true);\r\n                        x += len;\r\n                        len = 0;\r\n                        break;\r\n                    case '$':\r\n                        y -= Math.max(len, 1);\r\n                        x = corner.x;\r\n                        len = 0;\r\n                        break;\r\n                    case '!': return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//--PATTERNS\nconst acorn = new PlaintextPattern('!Name: Acorn\\n!Author: Charles Corderman\\n!A methuselah that stabilizes after 5206 generations.\\n!www.conwaylife.com/wiki/index.php?title=Acorn\\n.O\\n...O\\nOO..OOO\\n');\nconst beehive = new PlaintextPattern('!Name: Beehive\\n!Author: John Conway\\n!The second most common still life.\\n!www.conwaylife.com/wiki/index.php?title=Beehive\\n.OO\\nO..O\\n.OO\\n');\nconst blinker = new PlaintextPattern('!Name: Blinker\\n!Author: John Conway\\n!The smallest and most common oscillator.\\n!www.conwaylife.com/wiki/index.php?title=Blinker\\nOOO\\n');\nconst block = new PlaintextPattern('!Name: Block\\n!The most common still life.\\n!www.conwaylife.com/wiki/index.php?title=Block\\nOO\\nOO\\n');\nconst boat = new PlaintextPattern('!Name: Boat\\n!The only 5-cell still life.\\n!www.conwaylife.com/wiki/index.php?title=Boat\\nOO\\nO.O\\n.O\\n');\nconst bookends = new PlaintextPattern('!Name: Bookends\\n!A still life.\\n!www.conwaylife.com/wiki/index.php?title=Bookends\\nOO...OO\\nO.O.O.O\\n..O.O\\n.OO.OO\\n');\nconst canadagoose = new PlaintextPattern('!Name: Canada Goose\\n!Author: Jason Summers\\n!It conists of a glider pulling a tagalong.\\n!At the time of its discovery, the Canada goose was the smallest known diagonal spaceship other than the glider, but this record has since been beaten, first by Orion 2, and more recently by the crab.\\nOOO..........\\nO.........OO.\\n.O......OOO.O\\n...OO..OO....\\n....O........\\n........O....\\n....OO...O...\\n...O.O.OO....\\n...O.O..O.OO.\\n..O....OO....\\n..OO.........\\n..OO.........\\n');\nconst glider = new PlaintextPattern('!Name: Glider\\n!Author: Richard K. Guy\\n!The smallest, most common, and first discovered spaceship.\\n!www.conwaylife.com/wiki/index.php?title=Glider\\n.O\\n..O\\nOOO\\n');\nconst honeyfarm = new PlaintextPattern('!Name: Honey farm\\n!A common formation of four beehives.\\n!http://www.conwaylife.com/wiki/index.php?title=Honey_farm\\n......O\\n.....O.O\\n.....O.O\\n......O\\n\\n.OO.......OO\\nO..O.....O..O\\n.OO.......OO\\n\\n......O\\n.....O.O\\n.....O.O\\n......O\\n');\nconst hwss = new PlaintextPattern('﻿!Name: HWSS\\n!Author: John Conway\\n!The fourth most common spaceship (after the glider, lightweight spaceship and middleweight spaceship).\\n!http://www.conwaylife.com/wiki/index.php?title=Heavyweight_spaceship\\n...OO..\\n.O....O\\nO......\\nO.....O\\nOOOOOO.');\nconst lwss = new PlaintextPattern('﻿!Name: LWSS\\n!Author: John Conway\\n!The smallest known orthogonally moving spaceship, and the second most common spaceship(after the glider).\\n!http://www.conwaylife.com/wiki/index.php?title=Lightweight_spaceship\\n.O..O\\nO....\\nO...O\\nOOOO');\nconst mwss = new PlaintextPattern('﻿!Name: MWSS\\n!Author: John Conway\\n!The third most common spaceship (after the glider and lightweight spaceship).\\n!http://www.conwaylife.com/wiki/index.php?title=Middleweight_spaceship\\n...O..\\n.O...O\\nO.....\\nO....O\\nOOOOO.');\nconst pond = new PlaintextPattern('!Name: Pond\\n!A still life.\\n!www.conwaylife.com/wiki/index.php?title=Pond\\n.OO\\nO..O\\nO..O\\n.OO\\n');\nconst puffer1 = new PlaintextPattern('﻿!Name: Puffer 1\\n!Author: Bill Gosper\\n!An orthogonal, period-128 puffer and the first puffer to be discovered\\n!http://www.conwaylife.com/wiki/index.php?title=Puffer_1\\n.OOO......O.....O......OOO.\\nO..O.....OOO...OOO.....O..O\\n...O....OO.O...O.OO....O...\\n...O...................O...\\n...O..O.............O..O...\\n...O..OO...........OO..O...\\n..O...OO...........OO...O..');\nconst puffer2 = new PlaintextPattern('﻿!Name: Puffer 2\\n!Author: Bill Gosper\\n!The second puffer to be found.It uses two lightweight spaceships to escort a B-heptomino.\\n!http://www.conwaylife.com/wiki/index.php?title=Puffer_2\\n.OOO...........OOO\\nO..O..........O..O\\n...O....OOO......O\\n...O....O..O.....O\\n..O....O........O.');\nconst pulsar = new PlaintextPattern('!Name: Pulsar\\n!Author: John Conway\\n!Despite its size, this is the fourth most common oscillator (and by far the most common of period greater than 2).\\n!www.conwaylife.com/wiki/index.php?title=Pulsar\\n..OOO...OOO\\n\\nO....O.O....O\\nO....O.O....O\\nO....O.O....O\\n..OOO...OOO\\n\\n..OOO...OOO\\nO....O.O....O\\nO....O.O....O\\nO....O.O....O\\n\\n..OOO...OOO\\n');\nconst rpentomino = new PlaintextPattern('!Name: R-pentomino\\n!The most active polyomino with less than six cells; all of the others stabilize in at most 10 generations, but the R-pentomino does not do so until generation 1103, by which time it has a population of 116.\\n!www.conwaylife.com/wiki/index.php?title=R-pentomino\\n.OO\\nOO\\n.O\\n');\nconst snake = new PlaintextPattern('!Name: Snake\\n!The twenty-first most common still life.\\n!http://www.conwaylife.com/wiki/index.php?title=Snake\\nOO.O\\nO.OO\\n');\nconst spider = new RLEPattern('﻿#N Spider\\n#O David Bell\\n#C A c/5 period 5 orthogonal spaceship found in April 1997. It is the \\n#C smallest known c/5 spaceship.\\n#C http://www.conwaylife.com/wiki/index.php?title=Spider\\nx = 27, y = 8, rule = B3/S23\\n9bo7bo9b$3b2obobob2o3b2obobob2o3b$3obob3o9b3obob3o$o3bobo5bobo5bobo3bo\\n$4b2o6bobo6b2o4b$b2o9bobo9b2ob$b2ob2o15b2ob2ob$5bo15bo!');\nconst trafficlight = new PlaintextPattern('!Name: Traffic light\\n!A common formation of four blinkers.\\n!www.conwaylife.com/wiki/index.php?title=Traffic_light\\n..OOO\\n\\nO.....O\\nO.....O\\nO.....O\\n\\n..OOO\\n');\nconst tub = new PlaintextPattern('!Name: Tub\\n!A very common still life.\\n!www.conwaylife.com/wiki/index.php?title=Tub\\n.O\\nO.O\\n.O\\n');\nexport const allPatterns = { acorn, beehive, blinker, block, boat, bookends, canadagoose, glider, honeyfarm, hwss, lwss, mwss, pond, puffer1, puffer2, pulsar, rpentomino, snake, spider, trafficlight, tub };\nexport type PatternName = keyof typeof allPatterns;\n//--END","import { LifePoint, Life, LifeRect, Point } from './api';\r\n// import BoolArrayLife from './BoolArrayLife';\r\n// import ScholesLife from './ScholesLife';\r\n// import AbrashLife from './AbrashLife';\r\nimport StaffordOneLife from './StaffordOneLife';\r\nimport Game from '../Game';\r\nimport { allPatterns, Pattern } from './Patterns';\r\n\r\nconst deadColor = '#333';\r\nconst aliveColor = '#a0c';\r\nconst gridColor = '#000';\r\n\r\nfunction hexStringToArr(color: string) {\r\n    const withoutHash = color.slice(1);\r\n    const arr: number[] = [];\r\n    if (withoutHash.length === 3) {\r\n        for (let i = 0; i < 3; i++) arr.push(Number(`0x${withoutHash.charAt(i).repeat(2)}`));\r\n    } else {\r\n        for (let i = 0; i < 6; i += 2) arr.push(Number(`0x${withoutHash.slice(i, i + 2)}`));\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport default class LifeView extends Game {\r\n    private readonly _canvas: HTMLCanvasElement;\r\n    private readonly _maxScale = 0;\r\n    private readonly _minScale = -6;\r\n    private _scale: number;\r\n    private readonly _gridScale: number;\r\n    private _corner: LifePoint;\r\n    private readonly _life: Life;\r\n\r\n    public constructor(canvas: string, renderTime: number) {\r\n        super(renderTime, true);\r\n        this._canvas = document.getElementById(canvas) as HTMLCanvasElement;\r\n        this._scale = -1;\r\n        this._gridScale = -3;\r\n        this._corner = { x: -2, y: this.lifeHeight - 2 };\r\n        this._life = new StaffordOneLife();\r\n        this.pattern = allPatterns.puffer2;\r\n        window.addEventListener('resize', this.onWindowResize.bind(this));\r\n        this._canvas.addEventListener('wheel', this.onScroll.bind(this));\r\n        window.addEventListener('keydown', this.onKeyDown.bind(this));\r\n        this._canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n        this._canvas.addEventListener('mousemove', this.onMouseMove.bind(this));\r\n        this._canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n        this.onWindowResize();\r\n        this.draw();\r\n    }\r\n\r\n    public step() {\r\n        if (this.running) return;\r\n        this._life.step();\r\n        this.draw();\r\n    }\r\n\r\n    protected tick(deltaTickTime: number) {\r\n        this._life.step();\r\n    }\r\n\r\n    protected render(deltaRenderTime: number) {\r\n        this.drawDisplay();\r\n    }\r\n\r\n    private onWindowResize() {\r\n        // this._canvas.width = this._canvas.height = Math.floor(Math.min(window.innerWidth, window.innerHeight) * 0.9);\r\n        this._canvas.width = this._canvas.clientWidth;\r\n        this._canvas.height = this._canvas.clientHeight;\r\n        this._corner = { x: Math.floor(this._life.width / 2) - Math.floor(this.lifeWidth / 2), y: Math.floor(this._life.height / 2) + Math.floor(this.lifeHeight / 2) };\r\n        if (!this.running) this.draw();\r\n    }\r\n\r\n    private onKeyDown(ev: KeyboardEvent) {\r\n        switch (ev.key) {\r\n            case 's':\r\n                this.screenshot();\r\n                break;\r\n            case ' ':\r\n                if (this.running) this.stop();\r\n                else this.start();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onScroll(ev: WheelEvent) {\r\n        const v = this.bitmapToLife(ev);\r\n        if (ev.deltaY < 0) this.zoomIn(v);\r\n        else if (ev.deltaY > 0) this.zoomOut(v);\r\n    }\r\n\r\n    private _dragging = false;\r\n    private _dragStart: LifePoint = { x: -1, y: -1 };\r\n    private onMouseDown(ev: MouseEvent) {\r\n        this._dragging = true;\r\n        this._dragStart = this.bitmapToLife({ x: ev.clientX, y: ev.clientY });\r\n    }\r\n\r\n    private onMouseMove(ev: MouseEvent) {\r\n        if (!this._dragging) return;\r\n\r\n        const current = this.bitmapToLife({ x: ev.clientX, y: ev.clientY });\r\n        this._corner = { x: this._corner.x + this._dragStart.x - current.x, y: this._corner.y + this._dragStart.y - current.y };\r\n        this.drawDisplay();\r\n    }\r\n\r\n    private onMouseUp(ev: MouseEvent) {\r\n        this._dragging = false;\r\n    }\r\n\r\n    private draw() {\r\n        this.drawDisplay();\r\n    }\r\n\r\n    private clearDisplay() {\r\n        const { ctx, width, height } = this;\r\n        ctx.fillStyle = deadColor;\r\n        ctx.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    private drawDisplay() {\r\n        this.clearDisplay();\r\n        if (this._scale < 0) this.drawBlocks();\r\n        else this.drawPixels();\r\n    }\r\n\r\n    private drawGrid() {\r\n        if (!this.gridEnabled) return;\r\n\r\n        const { ctx, width, height } = this;\r\n        ctx.strokeStyle = gridColor;\r\n        ctx.beginPath();\r\n\r\n        for (let i = 0; i < width; i += 1 << -this._scale) {\r\n            ctx.moveTo(i, 0);\r\n            ctx.lineTo(i, height - 1);\r\n        }\r\n        for (let i = 0; i < height; i += 1 << -this._scale) {\r\n            ctx.moveTo(0, i);\r\n            ctx.lineTo(width - 1, i);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n    private drawBlocks() {\r\n        const { ctx } = this;\r\n        ctx.fillStyle = aliveColor;\r\n        const drawBlock = (v: LifePoint) => {\r\n            const p = this.lifeToBitmap(v);\r\n            if (this.isValidBitmapPoint(p)) ctx.fillRect(p.x, p.y, 1 << -this._scale, 1 << -this._scale);\r\n        };\r\n        this._life.draw(this.lifeRect, drawBlock);\r\n        this.drawGrid();\r\n    }\r\n\r\n    private drawPixels() {\r\n        const { ctx, width, height } = this;\r\n        const data = ctx.getImageData(0, 0, width, height);\r\n        const rgb = hexStringToArr(aliveColor);\r\n        const drawPixel = (v: LifePoint) => {\r\n            const p = this.lifeToBitmap(v);\r\n            data.data[p.y * width * 4 + p.x * 4 + 0] = rgb[0];\r\n            data.data[p.y * width * 4 + p.x * 4 + 1] = rgb[1];\r\n            data.data[p.y * width * 4 + p.x * 4 + 2] = rgb[2];\r\n            data.data[p.y * width * 4 + p.x * 4 + 3] = 0xff;\r\n        };\r\n        this._life.draw(this.lifeRect, drawPixel);\r\n        ctx.putImageData(data, 0, 0);\r\n    }\r\n\r\n    private screenshot() {\r\n        const url = this._canvas.toDataURL('image/png').replace(/^data:image\\/[^;]/, 'data:application/octet-stream');\r\n        const downloadLink = document.createElement('a');\r\n        downloadLink.setAttribute('download', 'Life.png');\r\n        downloadLink.setAttribute('href', url);\r\n        downloadLink.click();\r\n    }\r\n\r\n    private zoomOut(v: LifePoint) {\r\n        if (this._scale < this._maxScale) {\r\n            this._corner = { x: 2 * this._corner.x - v.x, y: 2 * this._corner.y - v.y };\r\n            this._scale++;\r\n            this.drawDisplay();\r\n        }\r\n    }\r\n\r\n    private zoomIn(v: LifePoint) {\r\n        if (this._scale > this._minScale) {\r\n            this._corner = { x: Math.floor((this._corner.x + v.x) / 2), y: Math.floor((this._corner.y + v.y) / 2) };\r\n            this._scale--;\r\n            this.drawDisplay();\r\n        }\r\n    }\r\n\r\n    public get canvas() { return this._canvas; }\r\n    public get scale() { return this._scale; }\r\n    public set scale(value: number) { this._scale = value; }\r\n    public get gridScale() { return this._gridScale; }\r\n    public get corner() { return this._corner; }\r\n    public set corner(value: LifePoint) { this._corner = value; }\r\n    public get life() { return this._life; }\r\n    public get ctx() { return this._canvas.getContext('2d')!; }\r\n    public get width() { return this._canvas.width; }\r\n    public get height() { return this._canvas.height; }\r\n    public set pattern(p: Pattern) {\r\n        this._life.clear();\r\n        p.add(this._life, { x: Math.floor(this._life.width / 2), y: Math.floor(this._life.height / 2) });\r\n        this.draw();\r\n    }\r\n\r\n    public scaleUp(v: number) {\r\n        if (this._scale >= 0) return v << this._scale;\r\n        else return v >> -this._scale;\r\n    }\r\n\r\n    public scaleDown(l: number) {\r\n        if (this._scale >= 0) return l >> this._scale;\r\n        else return l << -this._scale;\r\n    }\r\n\r\n    public get lifeWidth() { return this.scaleUp(this._canvas.width); }\r\n    public get lifeHeight() { return this.scaleUp(this._canvas.height); }\r\n    public get lifeRect() { return new LifeRect(this._corner, this.lifeWidth, this.lifeHeight); }\r\n\r\n    public lifeToBitmap(v: LifePoint): Point {\r\n        return {\r\n            x: this.scaleDown(v.x - this._corner.x),\r\n            y: this.scaleDown(this._corner.y - v.y),\r\n        };\r\n    }\r\n\r\n    public bitmapToLife(p: Point): LifePoint {\r\n        return {\r\n            x: this._corner.x + this.scaleUp(p.x),\r\n            y: this._corner.y - this.scaleUp(p.y),\r\n        };\r\n    }\r\n\r\n    public get gridEnabled() { return this._scale <= this._gridScale; }\r\n\r\n    public isValidBitmapPoint(p: Point) {\r\n        return 0 <= p.x && p.x < this._canvas.width && 0 <= p.y && p.y < this._canvas.height;\r\n    }\r\n}","import React from 'react';\r\nimport { FaPlay, FaPause, FaFastBackward, FaStepForward } from 'react-icons/fa';\r\nimport LifeView from './Life/LifeView';\r\nimport { allPatterns, PatternName} from './Life/Patterns';\r\n\r\nimport './LifeComponent.css';\r\n\r\ninterface LifeComponentState {\r\n    lifeData?: LifeView;\r\n    selectedPattern: PatternName;\r\n    renderTime: number;\r\n}\r\n\r\n// https://github.com/ericlippert/ConwaysLife/tree/episode11\r\n// https://ericlippert.com/2020/06/15/life-part-15/\r\nexport class LifeComponent extends React.Component<{}, LifeComponentState> {\r\n\r\n    public constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedPattern: 'puffer2',\r\n            renderTime: 10,\r\n        };\r\n    }\r\n\r\n    private onPatternChange(ev: React.ChangeEvent<HTMLSelectElement>) {\r\n        if (!this.state.lifeData) return;\r\n\r\n        const selectedPattern = ev.target.value as PatternName;\r\n\r\n        if (this.state.lifeData.running) this.state.lifeData.stop();\r\n        // eslint-disable-next-line\r\n        this.state.lifeData.pattern = allPatterns[selectedPattern];\r\n\r\n        this.setState({ selectedPattern });\r\n    }\r\n\r\n    private onRenderTimeChange(ev: React.ChangeEvent<HTMLInputElement>) {\r\n        if (!this.state.lifeData) return;\r\n\r\n        const tickTime = Number(ev.target.value);\r\n        if (isNaN(tickTime)) return;\r\n\r\n        // eslint-disable-next-line\r\n        this.state.lifeData.renderTime = tickTime;\r\n\r\n        this.setState({ renderTime: tickTime });\r\n    }\r\n\r\n    private onToggleRunning() {\r\n        if (!this.state.lifeData) return;\r\n        if (this.state.lifeData.running) this.state.lifeData.stop();\r\n        else this.state.lifeData.start();\r\n    }\r\n\r\n    private onReset() {\r\n        if (!this.state.lifeData) return;\r\n\r\n        if (this.state.lifeData.running) this.state.lifeData.stop();\r\n        // eslint-disable-next-line\r\n        this.state.lifeData.pattern = allPatterns[this.state.selectedPattern];\r\n    }\r\n\r\n    private onStepForward() {\r\n        if (!this.state.lifeData) return;\r\n\r\n        this.state.lifeData.step();\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const lifeData = new LifeView('lifeCanvas', this.state.renderTime);\r\n        this.setState({ lifeData });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this.state.lifeData?.stop();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Life\">\r\n                <canvas className=\"LifeCanvas\" id=\"lifeCanvas\" />\r\n                <div className=\"LifeControls\">\r\n                    <select value={this.state.selectedPattern} onChange={this.onPatternChange.bind(this)}>\r\n                        {Object.keys(allPatterns).map(key => (\r\n                            <option key={key} value={key}>{key}</option>\r\n                        ))}\r\n                    </select>\r\n                    <input type=\"number\" value={this.state.renderTime} onChange={this.onRenderTimeChange.bind(this)} min={10} max={250} step={10} />\r\n                    <button onClick={this.onReset.bind(this)}><FaFastBackward /></button>\r\n                    <button onClick={this.onToggleRunning.bind(this)}><FaPlay /><FaPause /></button>\r\n                    <button onClick={this.onStepForward.bind(this)}><FaStepForward /></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { LifeComponent } from './LifeComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LifeComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}