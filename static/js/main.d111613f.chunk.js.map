{"version":3,"sources":["Button.tsx","Life/api.ts","Life/StaffordOneLife.ts","Game.ts","Life/Patterns.ts","Life/LifeView.ts","Range.tsx","Select.tsx","LifeComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","props","className","style","onClick","children","LifeRect","cornerOrX","widthOrY","heightOrWidth","height","corner","width","this","x","y","Triplet","triplet","_triplet","_lnm","_mnm","_rnm","_lnext","_mnext","_rnext","b","_lcm","_mcm","_rcm","_lcur","_mcur","_rcur","_lcountm","_lcount","_mcountm","_mcount","_rcountm","_rcount","middleCurrentRaw","leftCountRaw","middleCountRaw","leftCurrentRaw","rightCurrentRaw","rightCountRaw","c","_rcountone","_mcountone","_lcountone","_currentm","_nextm","currentState","nextState","StaffordOneLife","_width","_height","_triplets","_changes","clear","tx","Math","floor","t","leftCurrent","uup","ppu","setLeftCurrent","middleCurrent","ppp","setMiddleCurrent","rightCurrent","upp","puu","setRightCurrent","uum","mmu","mmm","umm","muu","isValidPoint","value","becomeAlive","push","becomeDead","currentChanges","cx","cy","minx","max","maxx","min","miny","maxy","lc","leftCount","mc","middleCount","rc","rightCount","setLeftNext","setMiddleNext","setRightNext","changed","leftNext","middleNext","rightNext","rect","setPixel","xmin","xmax","ymin","ymax","get","Game","tickTime","_tickTime","renderTime","_doLoop","_tickLoopHandle","_lastRenderTime","running","window","clearInterval","setInterval","tickLoop","bind","time","tick","deltaTime","render","requestAnimationFrame","renderLoop","console","log","PlaintextPattern","plaintext","_plaintext","life","lines","split","filter","line","startsWith","set","RLEPattern","rle","_rle","map","trim","len","Number","i","allPatterns","acorn","ak94","beehive","blinker","block","boat","bookends","canadagoose","eater1","glider","gosperglidergun","honeyfarm","hwss","lwss","mwss","pond","puffer1","puffer2","pulsar","queenbee","queenbeeshuttle","rpentomino","snake","spider","trafficlight","tub","aliveColor","LifeView","canvas","_canvas","_maxScale","_minScale","_scale","_gridScale","_corner","_life","_dragging","_dragStart","_evCache","_prevDiff","document","getElementById","lifeHeight","pattern","addEventListener","onWindowResize","onScroll","onKeyDown","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onPointerDown","onPointerMove","onPointerUp","draw","step","deltaRenderTime","drawDisplay","clientWidth","clientHeight","lifeWidth","ev","key","screenshot","stop","start","v","bitmapToLife","deltaY","zoomIn","zoomOut","clientX","clientY","touches","length","preventDefault","current","pointerId","curDiff","sqrt","abs","removeEvent","splice","ctx","fillStyle","fillRect","clearDisplay","drawBlocks","drawPixels","gridEnabled","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","lifeRect","p","lifeToBitmap","isValidBitmapPoint","drawGrid","data","getImageData","rgb","color","withoutHash","slice","arr","charAt","repeat","hexStringToArr","putImageData","url","toDataURL","replace","downloadLink","createElement","setAttribute","click","getContext","add","l","scaleUp","scaleDown","Range","onChange","Select","LifeComponent","state","selectedPattern","speed","lifeData","target","setState","forceUpdate","dir","val","id","onPatternChange","Object","keys","display","onReset","onToggleRunning","onStepForward","onSpeedChange","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.d111613f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nexport default function Button(props: ButtonProperties) {\r\n    return (\r\n        <button className={`Button ${props.className || ''}`} style={props.style} onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\ninterface ButtonProperties {\r\n    children?: React.ReactNode;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    onClick?: () => void;\r\n}","export interface Life {\r\n    readonly width: number;\r\n    readonly height: number;\r\n    clear: () => void;\r\n    get: (x: number, y: number) => boolean;\r\n    set: (x: number, y: number, alive: boolean) => void;\r\n    draw: (rect: LifeRect, setPixel: (v: LifePoint) => void) => void;\r\n    step: () => void;\r\n}\r\n\r\nexport interface Point {\r\n    readonly x: number;\r\n    readonly y: number;\r\n}\r\n\r\nexport type LifePoint = Point;\r\n\r\nexport class LifeRect {\r\n    public readonly corner: LifePoint;\r\n    public readonly width: number;\r\n    public readonly height: number;\r\n\r\n    public constructor(corner: LifePoint, width: number, height: number)\r\n    public constructor(x: number, y: number, width: number, height: number)\r\n    public constructor(cornerOrX: LifePoint | number, widthOrY: number, heightOrWidth: number, height?: number) {\r\n        if (typeof cornerOrX === 'number') {\r\n            this.corner = { x: cornerOrX, y: widthOrY };\r\n            this.width = heightOrWidth;\r\n            this.height = height!;\r\n        } else {\r\n            this.corner = cornerOrX;\r\n            this.width = widthOrY;\r\n            this.height = heightOrWidth;\r\n        }\r\n    }\r\n\r\n    public get x() { return this.corner.x; }\r\n    public get y() { return this.corner.y; }\r\n}","import { Life, LifePoint, LifeRect } from './api';\r\n\r\nclass Triplet {\r\n    private _triplet: number;\r\n    public constructor(triplet: number) {\r\n        this._triplet = triplet;\r\n    }\r\n\r\n    // Bit numbers\r\n    private static readonly _lnext = 14;\r\n    private static readonly _mnext = 13;\r\n    private static readonly _rnext = 12;\r\n    private static readonly _lcur = 11;\r\n    private static readonly _mcur = 10;\r\n    private static readonly _rcur = 9;\r\n    private static readonly _lcount = 6;\r\n    private static readonly _mcount = 3;\r\n    private static readonly _rcount = 0;\r\n\r\n    // Bit masks\r\n    private static readonly _lnm = 1 << Triplet._lnext;\r\n    private static readonly _mnm = 1 << Triplet._mnext;\r\n    private static readonly _rnm = 1 << Triplet._rnext;\r\n    private static readonly _lcm = 1 << Triplet._lcur;\r\n    private static readonly _mcm = 1 << Triplet._mcur;\r\n    private static readonly _rcm = 1 << Triplet._rcur;\r\n    private static readonly _lcountm = 7 << Triplet._lcount;\r\n    private static readonly _mcountm = 7 << Triplet._mcount;\r\n    private static readonly _rcountm = 7 << Triplet._rcount;\r\n\r\n    // Getters and setters\r\n    public get leftNext() { return (Triplet._lnm & this._triplet) !== 0; }\r\n    public get middleNext() { return (Triplet._mnm & this._triplet) !== 0; }\r\n    public get rightNext() { return (Triplet._rnm & this._triplet) !== 0; }\r\n\r\n    public get leftNextRaw() { return (this._triplet & Triplet._lnm) >> Triplet._lnext; }\r\n    public get middleNextRaw() { return (this._triplet & Triplet._mnm) >> Triplet._mnext; }\r\n    public get rightNextRaw() { return (this._triplet & Triplet._rnm) >> Triplet._rnext; }\r\n\r\n    public setLeftNext(b: boolean) { return new Triplet(b ? (Triplet._lnm | this._triplet) : (~Triplet._lnm & this._triplet)); }\r\n    public setMiddleNext(b: boolean) { return new Triplet(b ? (Triplet._mnm | this._triplet) : (~Triplet._mnm & this._triplet)); }\r\n    public setRightNext(b: boolean) { return new Triplet(b ? (Triplet._rnm | this._triplet) : (~Triplet._rnm & this._triplet)); }\r\n\r\n    public get leftCurrent() { return (Triplet._lcm & this._triplet) !== 0; }\r\n    public get middleCurrent() { return (Triplet._mcm & this._triplet) !== 0; }\r\n    public get rightCurrent() { return (Triplet._rcm & this._triplet) !== 0; }\r\n\r\n    public get leftCurrentRaw() { return (this._triplet & Triplet._lcm) >> Triplet._lcur; }\r\n    public get middleCurrentRaw() { return (this._triplet & Triplet._mcm) >> Triplet._mcur; }\r\n    public get rightCurrentRaw() { return (this._triplet & Triplet._rcm) >> Triplet._rcur; }\r\n\r\n    public setLeftCurrent(b: boolean) { return new Triplet(b ? (Triplet._lcm | this._triplet) : (~Triplet._lcm & this._triplet)); }\r\n    public setMiddleCurrent(b: boolean) { return new Triplet(b ? (Triplet._mcm | this._triplet) : (~Triplet._mcm & this._triplet)); }\r\n    public setRightCurrent(b: boolean) { return new Triplet(b ? (Triplet._rcm | this._triplet) : (~Triplet._rcm & this._triplet)); }\r\n\r\n    public get leftCountRaw() { return (Triplet._lcountm & this._triplet) >> Triplet._lcount; }\r\n    public get middleCountRaw() { return (Triplet._mcountm & this._triplet) >> Triplet._mcount; }\r\n    public get rightCountRaw() { return (Triplet._rcountm & this._triplet) >> Triplet._rcount; }\r\n\r\n    public get leftCount() { return this.middleCurrentRaw+ this.leftCountRaw; }\r\n    public get middleCount() { return this.middleCountRaw + this.leftCurrentRaw + this.rightCurrentRaw; }\r\n    public get rightCount() { return this.middleCurrentRaw + this.rightCountRaw; }\r\n\r\n    public setLeftCountRaw(c: number) { return new Triplet((c << Triplet._lcount) | (~Triplet._lcountm & this._triplet)); }\r\n    public setMiddleCountRaw(c: number) { return new Triplet((c << Triplet._mcount) | (~Triplet._mcountm & this._triplet)); }\r\n    public setRightCountRaw(c: number) { return new Triplet((c << Triplet._rcount) | (~Triplet._rcountm & this._triplet)); }\r\n\r\n    private static readonly _lcountone = 1 << Triplet._lcount;\r\n    private static readonly _mcountone = 1 << Triplet._mcount;\r\n    private static readonly _rcountone = 1 << Triplet._rcount;\r\n    public get uup() { return new Triplet(Triplet._rcountone + this._triplet); }\r\n    public get uum() { return new Triplet(-Triplet._rcountone + this._triplet); }\r\n    public get upu() { return new Triplet(Triplet._mcountone + this._triplet); }\r\n    public get upp() { return new Triplet(Triplet._mcountone + Triplet._rcountone + this._triplet); }\r\n    public get umu() { return new Triplet(-Triplet._mcountone + this._triplet); }\r\n    public get umm() { return new Triplet(-Triplet._mcountone - Triplet._rcountone + this._triplet); }\r\n    public get puu() { return new Triplet(Triplet._lcountone + this._triplet); }\r\n    public get pum() { return new Triplet(Triplet._lcountone - Triplet._rcountone + this._triplet); }\r\n    public get ppu() { return new Triplet(Triplet._lcountone + Triplet._mcountone + this._triplet); }\r\n    public get ppp() { return new Triplet(Triplet._lcountone + Triplet._mcountone + Triplet._rcountone + this._triplet); }\r\n    public get muu() { return new Triplet(-Triplet._lcountone + this._triplet); }\r\n    public get mup() { return new Triplet(-Triplet._lcountone + Triplet._rcountone + this._triplet); }\r\n    public get mmu() { return new Triplet(-Triplet._lcountone - Triplet._mcountone + this._triplet); }\r\n    public get mmm() { return new Triplet(-Triplet._lcountone - Triplet._mcountone - Triplet._rcountone + this._triplet); }\r\n\r\n    private static readonly _currentm = Triplet._lcm | Triplet._mcm | Triplet._rcm;\r\n    private static readonly _nextm = Triplet._lnm | Triplet._mnm | Triplet._rnm;\r\n    public get currentState() { return (Triplet._currentm & this._triplet) >> Triplet._rcur; }\r\n    public get nextState() { return (Triplet._nextm & this._triplet) >> Triplet._rnext; }\r\n    public get changed() { return this.currentState !== this.nextState; }\r\n}\r\n\r\nexport default class StaffordOneLife implements Life {\r\n    private readonly _width = 342;\r\n    private readonly _height = 1026;\r\n    private _triplets: Triplet[][] = [];\r\n    private _changes: [number, number][] = [];\r\n\r\n    public constructor() { this.clear(); }\r\n    public clear() {\r\n        this._triplets = [];\r\n        this._changes = [];\r\n\r\n        for (let x = 0; x < this._width; x++) {\r\n            this._triplets[x] = [];\r\n            for (let y = 0; y < this._height; y++) {\r\n                this._triplets[x][y] = new Triplet(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    public get width() { return this._width * 3; }\r\n    public get height() { return this._height; }\r\n\r\n    private isValidPoint(x: number, y: number) { return 1 <= x && x < (this._width - 1) * 3 && 1 <= y && y < this._height - 1; }\r\n\r\n    private becomeAlive(x: number, y: number) {\r\n        const tx = Math.floor(x / 3);\r\n        const t = this._triplets[tx][y];\r\n        switch (x % 3) {\r\n            case 0:\r\n                if (t.leftCurrent) return false;\r\n                this._triplets[tx - 1][y - 1] = this._triplets[tx - 1][y - 1].uup;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].ppu;\r\n                this._triplets[tx - 1][y] = this._triplets[tx - 1][y].uup;\r\n                this._triplets[tx][y] = t.setLeftCurrent(true);\r\n                this._triplets[tx - 1][y + 1] = this._triplets[tx - 1][y + 1].uup;\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].ppu;\r\n                break;\r\n            case 1:\r\n                if (t.middleCurrent) return false;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].ppp;\r\n                this._triplets[tx][y] = t.setMiddleCurrent(true);\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].ppp;\r\n                break;\r\n            case 2:\r\n                if (t.rightCurrent) return false;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].upp;\r\n                this._triplets[tx + 1][y - 1] = this._triplets[tx + 1][y - 1].puu;\r\n                this._triplets[tx][y] = t.setRightCurrent(true);\r\n                this._triplets[tx + 1][y] = this._triplets[tx + 1][y].puu;\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].upp;\r\n                this._triplets[tx + 1][y + 1] = this._triplets[tx + 1][y + 1].puu;\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private becomeDead(x: number, y: number) {\r\n        const tx = Math.floor(x / 3);\r\n        const t = this._triplets[tx][y];\r\n        switch (x % 3) {\r\n            case 0:\r\n                if (!t.leftCurrent) return false;\r\n                this._triplets[tx - 1][y - 1] = this._triplets[tx - 1][y - 1].uum;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].mmu;\r\n                this._triplets[tx - 1][y] = this._triplets[tx - 1][y].uum;\r\n                this._triplets[tx][y] = t.setLeftCurrent(false);\r\n                this._triplets[tx - 1][y + 1] = this._triplets[tx - 1][y + 1].uum;\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].mmu;\r\n                break;\r\n            case 1:\r\n                if (!t.middleCurrent) return false;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].mmm;\r\n                this._triplets[tx][y] = t.setMiddleCurrent(false);\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].mmm;\r\n                break;\r\n            case 2:\r\n                if (!t.rightCurrent) return false;\r\n                this._triplets[tx][y - 1] = this._triplets[tx][y - 1].umm;\r\n                this._triplets[tx + 1][y - 1] = this._triplets[tx + 1][y - 1].muu;\r\n                this._triplets[tx][y] = t.setRightCurrent(false);\r\n                this._triplets[tx + 1][y] = this._triplets[tx + 1][y].muu;\r\n                this._triplets[tx][y + 1] = this._triplets[tx][y + 1].umm;\r\n                this._triplets[tx + 1][y + 1] = this._triplets[tx + 1][y + 1].muu;\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public get(x: number, y: number) {\r\n        if (!this.isValidPoint(x, y)) return false;\r\n\r\n        const t = this._triplets[Math.floor(x / 3)][y];\r\n        switch (x % 3) {\r\n            case 0: return t.leftCurrent;\r\n            case 1: return t.middleCurrent;\r\n            case 2: return t.rightCurrent;\r\n        }\r\n\r\n        // This will never be hit but tsc is being dumb\r\n        return false;\r\n    }\r\n\r\n    public set(x: number, y: number, value: boolean) {\r\n        if (!this.isValidPoint(x, y)) return;\r\n\r\n        if (value) {\r\n            if (this.becomeAlive(x, y)) this._changes.push([Math.floor(x / 3), y]);\r\n        } else {\r\n            if (this.becomeDead(x, y)) this._changes.push([Math.floor(x / 3), y]);\r\n        }\r\n    }\r\n\r\n    public step() {\r\n        const currentChanges: [number, number][] = [];\r\n        for (let [cx, cy] of this._changes) {\r\n            const minx = Math.max(cx - 1, 1);\r\n            const maxx = Math.min(cx + 2, this._width - 1);\r\n            const miny = Math.max(cy - 1, 1);\r\n            const maxy = Math.min(cy + 2, this._height - 1);\r\n            for (let y = miny; y < maxy; y++) {\r\n                for (let x = minx; x < maxx; x++) {\r\n                    const c = this._triplets[x][y];\r\n                    let t = c;\r\n                    const lc = t.leftCount;\r\n                    const mc = t.middleCount;\r\n                    const rc = t.rightCount;\r\n                    t = t.setLeftNext(lc === 3 || (t.leftCurrent && lc === 2));\r\n                    t = t.setMiddleNext(mc === 3 || (t.middleCurrent && mc === 2));\r\n                    t = t.setRightNext(rc === 3 || (t.rightCurrent && rc === 2));\r\n                    if (t.changed) {\r\n                        currentChanges.push([x, y]);\r\n                        this._triplets[x][y] = t;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._changes = [];\r\n\r\n        for (let [x, y] of currentChanges) {\r\n            const t = this._triplets[x][y];\r\n            if (!t.changed) continue;\r\n\r\n            if (t.leftNext) this.becomeAlive(x * 3, y);\r\n            else this.becomeDead(x * 3, y);\r\n            if (t.middleNext) this.becomeAlive(x * 3 + 1, y);\r\n            else this.becomeDead(x * 3 + 1, y);\r\n            if (t.rightNext) this.becomeAlive(x * 3 + 2, y);\r\n            else this.becomeDead(x * 3 + 2, y);\r\n            this._changes.push([x, y]);\r\n        }\r\n    }\r\n\r\n    public draw(rect: LifeRect, setPixel: (v: LifePoint) => void) {\r\n        const xmin = Math.max(0, rect.x);\r\n        const xmax = Math.min(this._width * 3, rect.x + rect.width);\r\n        const ymin = Math.max(0, rect.y - rect.height + 1);\r\n        const ymax = Math.min(this._height, rect.y + 1);\r\n        for (let y = ymin; y < ymax; y++) for (let x = xmin; x < xmax; x++) if (this.get(x, y)) setPixel({ x, y });\r\n    }\r\n}","// TODO: Pull in the canvas stuff, but right now it's so tied to the LifeView class\r\n// that I'm too lazy to separate it\r\nexport default abstract class Game {\r\n    private _tickTime: number;\r\n    public renderTime: number;\r\n\r\n    protected constructor(tickTime: number) {\r\n        this._tickTime = tickTime;\r\n        this.renderTime = 100 / 6;\r\n    }\r\n\r\n    protected abstract render(deltaRenderTime: number): void;\r\n    protected abstract tick(): void;\r\n\r\n    public set tickTime(value: number) {\r\n        this._tickTime = value;\r\n        if (this.running) {\r\n            window.clearInterval(this._tickLoopHandle);\r\n            this._tickLoopHandle = window.setInterval(this.tickLoop.bind(this), this._tickTime);\r\n        }\r\n    }\r\n\r\n    private _doLoop = false;\r\n    public get running() { return this._doLoop; }\r\n\r\n    private _tickLoopHandle = 0;\r\n    private tickLoop(time: number) {\r\n        this.tick();\r\n    }\r\n    \r\n    private _lastRenderTime = 0;\r\n    private renderLoop(time: number) {\r\n        const deltaTime = time - this._lastRenderTime;\r\n        if (deltaTime >= this.renderTime) {\r\n            this.render(deltaTime);\r\n            this._lastRenderTime = time;\r\n        }\r\n        if (this._doLoop) window.requestAnimationFrame(this.renderLoop.bind(this));\r\n    }\r\n\r\n    public start() {\r\n        console.log(this._tickTime);\r\n        this._doLoop = true;\r\n        window.requestAnimationFrame(this.renderLoop.bind(this));\r\n        this._tickLoopHandle = window.setInterval(this.tickLoop.bind(this), this._tickTime);\r\n    }\r\n\r\n    public stop() {\r\n        this._doLoop = false;\r\n        window.clearInterval(this._tickLoopHandle);\r\n    }\r\n}","import { Life, LifePoint } from './api';\r\n\r\nexport interface Pattern {\r\n    add: (life: Life, corner: LifePoint) => void;\r\n}\r\n\r\nclass PlaintextPattern implements Pattern {\r\n    // The plaintext Life pattern format is described here: https://www.conwaylife.com/wiki/Plaintext\r\n    // Briefly:\r\n    // ! indicates a comment\r\n    // O is a living cell\r\n    // . is a dead cell\r\n    // Rows are indicated by line breaks\r\n    private readonly _plaintext: string;\r\n\r\n    public constructor(plaintext: string) {\r\n        this._plaintext = plaintext;\r\n    }\r\n\r\n    add(life: Life, corner: LifePoint) {\r\n        var lines = this._plaintext.split(/\\r?\\n/).filter(line => !line.startsWith('!'));\r\n        let y = corner.y;\r\n        for (let line of lines) {\r\n            let x = corner.x;\r\n            for (let c of line) {\r\n                if (c === 'O') life.set(x, y, true);\r\n                x++;\r\n            }\r\n            y--;\r\n        }\r\n    }\r\n}\r\n\r\nclass RLEPattern implements Pattern {\r\n    // The RLE Life pattern format is described here: https://www.conwaylife.com/wiki/Run_Length_Encoded\r\n    // Briefly:\r\n    // # indicates a comment\r\n    // \"x = n, y = n\" gives the bounding box of the pattern.\r\n    // A number followed by b or o indicates that number of dead or\r\n    // alive cells, respectively, and the number may be omitted if the number is one.\r\n    // A number followed by $ is a newline, and again, it may bo omitted if one.\r\n    // ! is the end of the pattern.\r\n    private readonly _rle: string;\r\n    public constructor(rle: string) {\r\n        this._rle = rle;\r\n    }\r\n\r\n    public add(life: Life, corner: LifePoint) {\r\n        const lines = this._rle.split(/\\r?\\n/)\r\n            .map(line => line.trim())\r\n            .filter(line => !line.startsWith('#') && !line.startsWith('x'));\r\n        \r\n        let { x, y } = corner;\r\n        let len = 0;\r\n        for (let line of lines) {\r\n            for (let c of line) {\r\n                switch (c) {\r\n                    case '0':\r\n                    case '1':\r\n                    case '2':\r\n                    case '3':\r\n                    case '4':\r\n                    case '5':\r\n                    case '6':\r\n                    case '7':\r\n                    case '8':\r\n                    case '9':\r\n                        len = len * 10 + Number(c);\r\n                        break;\r\n                    case 'b':\r\n                        x += Math.max(len, 1);\r\n                        len = 0;\r\n                        break;\r\n                    case 'o':\r\n                        len = Math.max(len, 1);\r\n                        for (let i = 0; i < len; i++) life.set(x + i, y, true);\r\n                        x += len;\r\n                        len = 0;\r\n                        break;\r\n                    case '$':\r\n                        y -= Math.max(len, 1);\r\n                        x = corner.x;\r\n                        len = 0;\r\n                        break;\r\n                    case '!': return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//--PATTERNS\nconst acorn = new PlaintextPattern('!Name: Acorn\\n!Author: Charles Corderman\\n!A methuselah that stabilizes after 5206 generations.\\n!www.conwaylife.com/wiki/index.php?title=Acorn\\n.O\\n...O\\nOO..OOO\\n');\nconst ak94 = new PlaintextPattern('! AK-94\\n! Mike Playle\\n! The smallest known true p94 gun, found in May 2013.\\n! www.conwaylife.com/wiki/AK-94\\n...............O.......OO.............\\n...............OOO.....OO.............\\n..................O...................\\n.................OO................OO.\\n..............................OO..O..O\\n..............................O.O..OO.\\n.................................OO...\\n.....O............................O...\\n.....OOO..........................O.OO\\n........O......................OO.O..O\\n.......OO......................OO.OO..\\n......................................\\n......................................\\n.................O....................\\n..OO.OO.........O.O..........OO.......\\nO..O.OO........O...O.........O........\\nOO.O...........O...O..........OOO.....\\n...O...........O...O............O.....\\n...OO...........O.O...................\\n.OO..O.O.........O....................\\nO..O..OO..............................\\n.OO................OO.................\\n...................O..................\\n.............OO.....OOO...............\\n.............OO.......O...............');\nconst beehive = new PlaintextPattern('!Name: Beehive\\n!Author: John Conway\\n!The second most common still life.\\n!www.conwaylife.com/wiki/index.php?title=Beehive\\n.OO\\nO..O\\n.OO\\n');\nconst blinker = new PlaintextPattern('!Name: Blinker\\n!Author: John Conway\\n!The smallest and most common oscillator.\\n!www.conwaylife.com/wiki/index.php?title=Blinker\\nOOO\\n');\nconst block = new PlaintextPattern('!Name: Block\\n!The most common still life.\\n!www.conwaylife.com/wiki/index.php?title=Block\\nOO\\nOO\\n');\nconst boat = new PlaintextPattern('!Name: Boat\\n!The only 5-cell still life.\\n!www.conwaylife.com/wiki/index.php?title=Boat\\nOO\\nO.O\\n.O\\n');\nconst bookends = new PlaintextPattern('!Name: Bookends\\n!A still life.\\n!www.conwaylife.com/wiki/index.php?title=Bookends\\nOO...OO\\nO.O.O.O\\n..O.O\\n.OO.OO\\n');\nconst canadagoose = new PlaintextPattern('!Name: Canada goose\\n!Author: Jason Summers\\n!Canada goose consists of a glider plus a tagalong. At the time of its discovery, the Canada goose was the smallest known diagonal spaceship other than the glider, but this record has since been beaten, first by Orion 2, and more recently by the crab.\\n!www.conwaylife.com/wiki/index.php?title=Canada_goose\\nOOO\\nO.........OO\\n.O......OOO.O\\n...OO..OO\\n....O\\n........O\\n....OO...O\\n...O.O.OO\\n...O.O..O.OO\\n..O....OO\\n..OO\\n..OO\\n');\nconst eater1 = new PlaintextPattern('!Name: Eater 1\\n!Author: Bill Gosper\\n!The first discovered eater.\\n!http://www.conwaylife.com/wiki/index.php?title=Eater_1\\nOO\\nO.O\\n..O\\n..OO\\n');\nconst glider = new PlaintextPattern('!Name: Glider\\n!Author: Richard K. Guy\\n!The smallest, most common, and first discovered spaceship.\\n!www.conwaylife.com/wiki/index.php?title=Glider\\n.O\\n..O\\nOOO\\n');\nconst gosperglidergun = new PlaintextPattern('!Name: Gosper glider gun\\n!Author: Bill Gosper\\n!The first known gun and the first known finite pattern with unbounded growth.\\n!www.conwaylife.com/wiki/index.php?title=Gosper_glider_gun\\n........................O\\n......................O.O\\n............OO......OO............OO\\n...........O...O....OO............OO\\nOO........O.....O...OO\\nOO........O...O.OO....O.O\\n..........O.....O.......O\\n...........O...O\\n............OO\\n');\nconst honeyfarm = new PlaintextPattern('!Name: Honey farm\\n!A common formation of four beehives.\\n!http://www.conwaylife.com/wiki/index.php?title=Honey_farm\\n......O\\n.....O.O\\n.....O.O\\n......O\\n\\n.OO.......OO\\nO..O.....O..O\\n.OO.......OO\\n\\n......O\\n.....O.O\\n.....O.O\\n......O\\n');\nconst hwss = new PlaintextPattern('﻿!Name: HWSS\\n!Author: John Conway\\n!The fourth most common spaceship (after the glider, lightweight spaceship and middleweight spaceship).\\n!http://www.conwaylife.com/wiki/index.php?title=Heavyweight_spaceship\\n...OO..\\n.O....O\\nO......\\nO.....O\\nOOOOOO.');\nconst lwss = new PlaintextPattern('﻿!Name: LWSS\\n!Author: John Conway\\n!The smallest known orthogonally moving spaceship, and the second most common spaceship(after the glider).\\n!http://www.conwaylife.com/wiki/index.php?title=Lightweight_spaceship\\n.O..O\\nO....\\nO...O\\nOOOO');\nconst mwss = new PlaintextPattern('﻿!Name: MWSS\\n!Author: John Conway\\n!The third most common spaceship (after the glider and lightweight spaceship).\\n!http://www.conwaylife.com/wiki/index.php?title=Middleweight_spaceship\\n...O..\\n.O...O\\nO.....\\nO....O\\nOOOOO.');\nconst pond = new PlaintextPattern('!Name: Pond\\n!A still life.\\n!www.conwaylife.com/wiki/index.php?title=Pond\\n.OO\\nO..O\\nO..O\\n.OO\\n');\nconst puffer1 = new PlaintextPattern('﻿!Name: Puffer 1\\n!Author: Bill Gosper\\n!An orthogonal, period-128 puffer and the first puffer to be discovered\\n!http://www.conwaylife.com/wiki/index.php?title=Puffer_1\\n.OOO......O.....O......OOO.\\nO..O.....OOO...OOO.....O..O\\n...O....OO.O...O.OO....O...\\n...O...................O...\\n...O..O.............O..O...\\n...O..OO...........OO..O...\\n..O...OO...........OO...O..');\nconst puffer2 = new PlaintextPattern('﻿!Name: Puffer 2\\n!Author: Bill Gosper\\n!The second puffer to be found.It uses two lightweight spaceships to escort a B-heptomino.\\n!http://www.conwaylife.com/wiki/index.php?title=Puffer_2\\n.OOO...........OOO\\nO..O..........O..O\\n...O....OOO......O\\n...O....O..O.....O\\n..O....O........O.');\nconst pulsar = new PlaintextPattern('!Name: Pulsar\\n!Author: John Conway\\n!Despite its size, this is the fourth most common oscillator (and by far the most common of period greater than 2).\\n!www.conwaylife.com/wiki/index.php?title=Pulsar\\n..OOO...OOO\\n\\nO....O.O....O\\nO....O.O....O\\nO....O.O....O\\n..OOO...OOO\\n\\n..OOO...OOO\\nO....O.O....O\\nO....O.O....O\\nO....O.O....O\\n\\n..OOO...OOO\\n');\nconst queenbee = new PlaintextPattern('!Name: Queen bee\\n!A pattern that lays a beehive on either side of itself before exploding.\\n!www.conwaylife.com/wiki/index.php?title=Queen_bee\\n...O\\n..O.O\\n.O...O\\n..OOO\\nOO...OO\\n');\nconst queenbeeshuttle = new PlaintextPattern('!Name: Queen bee shuttle\\n!Author: Bill Gosper\\n!A period 30 oscillator.\\n!www.conwaylife.com/wiki/index.php?title=Queen_bee_shuttle\\n.........O\\n.......O.O\\n......O.O\\nOO...O..O...........OO\\nOO....O.O...........OO\\n.......O.O\\n.........O\\n');\nconst rpentomino = new PlaintextPattern('!Name: R-pentomino\\n!The most active polyomino with less than six cells; all of the others stabilize in at most 10 generations, but the R-pentomino does not do so until generation 1103, by which time it has a population of 116.\\n!www.conwaylife.com/wiki/index.php?title=R-pentomino\\n.OO\\nOO\\n.O\\n');\nconst snake = new PlaintextPattern('!Name: Snake\\n!The twenty-first most common still life.\\n!http://www.conwaylife.com/wiki/index.php?title=Snake\\nOO.O\\nO.OO\\n');\nconst spider = new RLEPattern('﻿#N Spider\\n#O David Bell\\n#C A c/5 period 5 orthogonal spaceship found in April 1997. It is the \\n#C smallest known c/5 spaceship.\\n#C http://www.conwaylife.com/wiki/index.php?title=Spider\\nx = 27, y = 8, rule = B3/S23\\n9bo7bo9b$3b2obobob2o3b2obobob2o3b$3obob3o9b3obob3o$o3bobo5bobo5bobo3bo\\n$4b2o6bobo6b2o4b$b2o9bobo9b2ob$b2ob2o15b2ob2ob$5bo15bo!');\nconst trafficlight = new PlaintextPattern('!Name: Traffic light\\n!A common formation of four blinkers.\\n!www.conwaylife.com/wiki/index.php?title=Traffic_light\\n..OOO\\n\\nO.....O\\nO.....O\\nO.....O\\n\\n..OOO\\n');\nconst tub = new PlaintextPattern('!Name: Tub\\n!A very common still life.\\n!www.conwaylife.com/wiki/index.php?title=Tub\\n.O\\nO.O\\n.O\\n');\nexport const allPatterns = { acorn, ak94, beehive, blinker, block, boat, bookends, canadagoose, eater1, glider, gosperglidergun, honeyfarm, hwss, lwss, mwss, pond, puffer1, puffer2, pulsar, queenbee, queenbeeshuttle, rpentomino, snake, spider, trafficlight, tub };\nexport type PatternName = keyof typeof allPatterns;\n//--END","import { LifePoint, Life, LifeRect, Point } from './api';\r\n// import BoolArrayLife from './BoolArrayLife';\r\n// import ScholesLife from './ScholesLife';\r\n// import AbrashLife from './AbrashLife';\r\nimport StaffordOneLife from './StaffordOneLife';\r\nimport Game from '../Game';\r\nimport { allPatterns, Pattern } from './Patterns';\r\n\r\nconst deadColor = '#333';\r\nconst aliveColor = '#a0c';\r\nconst gridColor = '#000';\r\n\r\nfunction hexStringToArr(color: string) {\r\n    const withoutHash = color.slice(1);\r\n    const arr: number[] = [];\r\n    if (withoutHash.length === 3) {\r\n        for (let i = 0; i < 3; i++) arr.push(Number(`0x${withoutHash.charAt(i).repeat(2)}`));\r\n    } else {\r\n        for (let i = 0; i < 6; i += 2) arr.push(Number(`0x${withoutHash.slice(i, i + 2)}`));\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport default class LifeView extends Game {\r\n    private readonly _canvas: HTMLCanvasElement;\r\n    private readonly _maxScale = 0;\r\n    private readonly _minScale = -6;\r\n    private _scale: number;\r\n    private readonly _gridScale: number;\r\n    private _corner: LifePoint;\r\n    private readonly _life: Life;\r\n\r\n    public constructor(canvas: string, tickTime: number) {\r\n        super(tickTime);\r\n        this._canvas = document.getElementById(canvas) as HTMLCanvasElement;\r\n        this._scale = -1;\r\n        this._gridScale = -3;\r\n        this._corner = { x: -2, y: this.lifeHeight - 2 };\r\n        this._life = new StaffordOneLife();\r\n        this.pattern = allPatterns.puffer2;\r\n        window.addEventListener('resize', this.onWindowResize.bind(this));\r\n        this._canvas.addEventListener('wheel', this.onScroll.bind(this));\r\n        window.addEventListener('keydown', this.onKeyDown.bind(this));\r\n        this._canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\r\n        this._canvas.addEventListener('mousemove', this.onMouseMove.bind(this));\r\n        this._canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\r\n        this._canvas.addEventListener('touchstart', this.onTouchStart.bind(this));\r\n        this._canvas.addEventListener('touchmove', this.onTouchMove.bind(this));\r\n        this._canvas.addEventListener('touchend', this.onTouchEnd.bind(this));\r\n        this._canvas.addEventListener('pointerdown', this.onPointerDown.bind(this));\r\n        this._canvas.addEventListener('pointermove', this.onPointerMove.bind(this));\r\n        this._canvas.addEventListener('pointerup', this.onPointerUp.bind(this));\r\n        this._canvas.addEventListener('pointercancel', this.onPointerUp.bind(this));\r\n        this._canvas.addEventListener('pointerout', this.onPointerUp.bind(this));\r\n        this._canvas.addEventListener('pointerleave', this.onPointerUp.bind(this));\r\n        this.onWindowResize();\r\n        this.draw();\r\n    }\r\n\r\n    public step() {\r\n        if (this.running) return;\r\n        this._life.step();\r\n        this.draw();\r\n    }\r\n\r\n    protected tick() {\r\n        this._life.step();\r\n    }\r\n\r\n    protected render(deltaRenderTime: number) {\r\n        this.drawDisplay();\r\n    }\r\n\r\n    private onWindowResize() {\r\n        // this._canvas.width = this._canvas.height = Math.floor(Math.min(window.innerWidth, window.innerHeight) * 0.9);\r\n        this._canvas.width = this._canvas.clientWidth;\r\n        this._canvas.height = this._canvas.clientHeight;\r\n        this._corner = { x: Math.floor(this._life.width / 2) - Math.floor(this.lifeWidth / 2), y: Math.floor(this._life.height / 2) + Math.floor(this.lifeHeight / 2) };\r\n        if (!this.running) this.draw();\r\n    }\r\n\r\n    private onKeyDown(ev: KeyboardEvent) {\r\n        switch (ev.key) {\r\n            case 's':\r\n                this.screenshot();\r\n                break;\r\n            case ' ':\r\n                if (this.running) this.stop();\r\n                else this.start();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onScroll(ev: WheelEvent) {\r\n        const v = this.bitmapToLife(ev);\r\n        if (ev.deltaY < 0) this.zoomIn(v);\r\n        else if (ev.deltaY > 0) this.zoomOut(v);\r\n    }\r\n\r\n    private _dragging = false;\r\n    private _dragStart: LifePoint = { x: -1, y: -1 };\r\n    private onMouseDown(ev: MouseEvent) {\r\n        this._dragging = true;\r\n        this._dragStart = this.bitmapToLife({ x: ev.clientX, y: ev.clientY });\r\n    }\r\n\r\n    private onTouchStart(ev: TouchEvent) {\r\n        if (ev.touches.length !== 1) return;\r\n\r\n        ev.preventDefault();\r\n        this._dragging = true;\r\n        this._dragStart = this.bitmapToLife({ x: ev.touches[0].clientX, y: ev.touches[0].clientY });\r\n    }\r\n\r\n    private onMouseMove(ev: MouseEvent) {\r\n        if (!this._dragging) return;\r\n\r\n        const current = this.bitmapToLife({ x: ev.clientX, y: ev.clientY });\r\n        this._corner = { x: this._corner.x + this._dragStart.x - current.x, y: this._corner.y + this._dragStart.y - current.y };\r\n        this.drawDisplay();\r\n    }\r\n\r\n    private onTouchMove(ev: TouchEvent) {\r\n        if (!this._dragging) return;\r\n\r\n        ev.preventDefault();\r\n        const current = this.bitmapToLife({ x: ev.touches[0].clientX, y: ev.touches[0].clientY });\r\n        this._corner = { x: this._corner.x + this._dragStart.x - current.x, y: this._corner.y + this._dragStart.y - current.y };\r\n        this.drawDisplay();\r\n    }\r\n\r\n    private onMouseUp(ev: MouseEvent) {\r\n        this._dragging = false;\r\n    }\r\n\r\n    private onTouchEnd(ev: TouchEvent) {\r\n        if (ev.touches.length !== 1) return;\r\n        ev.preventDefault();\r\n        this._dragging = false;\r\n    }\r\n    \r\n    private _evCache: PointerEvent[] = [];\r\n    private _prevDiff = -1;\r\n    \r\n    private onPointerDown(ev: PointerEvent) {\r\n        // The pointerdown event signals the start of a touch interaction.\r\n        // This event is cached to support 2-finger gestures\r\n        this._evCache.push(ev);\r\n    }\r\n\r\n    private onPointerMove(ev: PointerEvent) {\r\n        // This function implements a 2-pointer horizontal pinch/zoom gesture. \r\n        //\r\n        // If the distance between the two pointers has increased (zoom in), \r\n        // the taget element's background is changed to \"pink\" and if the \r\n        // distance is decreasing (zoom out), the color is changed to \"lightblue\".\r\n        //\r\n        // This function sets the target element's border to \"dashed\" to visually\r\n        // indicate the pointer's target received a move event.\r\n       \r\n        // Find this event in the cache and update its record with this event\r\n        for (let i = 0; i < this._evCache.length; i++) {\r\n            if (ev.pointerId === this._evCache[i].pointerId) {\r\n                this._evCache[i] = ev;\r\n                break;\r\n            }\r\n        }\r\n       \r\n        // If two pointers are down, check for pinch gestures\r\n        if (this._evCache.length === 2) {\r\n            // Calculate the distance between the two pointers\r\n            const curDiff = Math.sqrt((this._evCache[0].clientX - this._evCache[1].clientX)**2 + (this._evCache[0].clientY - this._evCache[1].clientY)**2);\r\n            const delta = Math.abs(curDiff - this._prevDiff);\r\n\r\n            if (delta > 50) {\r\n                if (curDiff > this._prevDiff) {\r\n                    this.zoomIn({ x: Math.floor((this._evCache[0].clientX + this._evCache[1].clientX) / 2), y: Math.floor((this._evCache[0].clientY + this._evCache[1].clientY) / 2) });\r\n                } else if (curDiff < this._prevDiff) {\r\n                    // The distance between the two pointers has decreased\r\n                    this.zoomOut({ x: Math.floor((this._evCache[0].clientX + this._evCache[1].clientX) / 2), y: Math.floor((this._evCache[0].clientY + this._evCache[1].clientY) / 2) });\r\n                }\r\n                // Cache the distance for the next move event \r\n                this._prevDiff = curDiff;\r\n            }\r\n        \r\n        }\r\n    }\r\n\r\n    private onPointerUp(ev: PointerEvent) {\r\n        // Remove this pointer from the cache\r\n        this.removeEvent(ev);\r\n       \r\n        // If the number of pointers down is less than two then reset diff tracker\r\n        if (this._evCache.length < 2) this._prevDiff = -1;\r\n    }\r\n\r\n    private removeEvent(ev: PointerEvent) {\r\n        // Remove this event from the target's cache\r\n        for (var i = 0; i < this._evCache.length; i++) {\r\n            if (this._evCache[i].pointerId === ev.pointerId) {\r\n                this._evCache.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private draw() {\r\n        this.drawDisplay();\r\n    }\r\n\r\n    private clearDisplay() {\r\n        const { ctx, width, height } = this;\r\n        ctx.fillStyle = deadColor;\r\n        ctx.fillRect(0, 0, width, height);\r\n    }\r\n\r\n    private drawDisplay() {\r\n        this.clearDisplay();\r\n        if (this._scale < 0) this.drawBlocks();\r\n        else this.drawPixels();\r\n    }\r\n\r\n    private drawGrid() {\r\n        if (!this.gridEnabled) return;\r\n\r\n        const { ctx, width, height } = this;\r\n        ctx.strokeStyle = gridColor;\r\n        ctx.beginPath();\r\n\r\n        for (let i = 0; i < width; i += 1 << -this._scale) {\r\n            ctx.moveTo(i, 0);\r\n            ctx.lineTo(i, height - 1);\r\n        }\r\n        for (let i = 0; i < height; i += 1 << -this._scale) {\r\n            ctx.moveTo(0, i);\r\n            ctx.lineTo(width - 1, i);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n\r\n    private drawBlocks() {\r\n        const { ctx } = this;\r\n        ctx.fillStyle = aliveColor;\r\n        const drawBlock = (v: LifePoint) => {\r\n            const p = this.lifeToBitmap(v);\r\n            if (this.isValidBitmapPoint(p)) ctx.fillRect(p.x, p.y, 1 << -this._scale, 1 << -this._scale);\r\n        };\r\n        this._life.draw(this.lifeRect, drawBlock);\r\n        this.drawGrid();\r\n    }\r\n\r\n    private drawPixels() {\r\n        const { ctx, width, height } = this;\r\n        const data = ctx.getImageData(0, 0, width, height);\r\n        const rgb = hexStringToArr(aliveColor);\r\n        const drawPixel = (v: LifePoint) => {\r\n            const p = this.lifeToBitmap(v);\r\n            data.data[p.y * width * 4 + p.x * 4 + 0] = rgb[0];\r\n            data.data[p.y * width * 4 + p.x * 4 + 1] = rgb[1];\r\n            data.data[p.y * width * 4 + p.x * 4 + 2] = rgb[2];\r\n            data.data[p.y * width * 4 + p.x * 4 + 3] = 0xff;\r\n        };\r\n        this._life.draw(this.lifeRect, drawPixel);\r\n        ctx.putImageData(data, 0, 0);\r\n    }\r\n\r\n    private screenshot() {\r\n        const url = this._canvas.toDataURL('image/png').replace(/^data:image\\/[^;]/, 'data:application/octet-stream');\r\n        const downloadLink = document.createElement('a');\r\n        downloadLink.setAttribute('download', 'Life.png');\r\n        downloadLink.setAttribute('href', url);\r\n        downloadLink.click();\r\n    }\r\n\r\n    private zoomOut(v: LifePoint) {\r\n        if (this._scale < this._maxScale) {\r\n            this._corner = { x: 2 * this._corner.x - v.x, y: 2 * this._corner.y - v.y };\r\n            this._scale++;\r\n            this.drawDisplay();\r\n        }\r\n    }\r\n\r\n    private zoomIn(v: LifePoint) {\r\n        if (this._scale > this._minScale) {\r\n            this._corner = { x: Math.floor((this._corner.x + v.x) / 2), y: Math.floor((this._corner.y + v.y) / 2) };\r\n            this._scale--;\r\n            this.drawDisplay();\r\n        }\r\n    }\r\n\r\n    public get canvas() { return this._canvas; }\r\n    public get scale() { return this._scale; }\r\n    public set scale(value: number) { this._scale = value; }\r\n    public get gridScale() { return this._gridScale; }\r\n    public get corner() { return this._corner; }\r\n    public set corner(value: LifePoint) { this._corner = value; }\r\n    public get life() { return this._life; }\r\n    public get ctx() { return this._canvas.getContext('2d')!; }\r\n    public get width() { return this._canvas.width; }\r\n    public get height() { return this._canvas.height; }\r\n    public set pattern(p: Pattern) {\r\n        this._life.clear();\r\n        p.add(this._life, { x: Math.floor(this._life.width / 2), y: Math.floor(this._life.height / 2) });\r\n        this.draw();\r\n    }\r\n\r\n    public scaleUp(v: number) {\r\n        if (this._scale >= 0) return v << this._scale;\r\n        else return v >> -this._scale;\r\n    }\r\n\r\n    public scaleDown(l: number) {\r\n        if (this._scale >= 0) return l >> this._scale;\r\n        else return l << -this._scale;\r\n    }\r\n\r\n    public get lifeWidth() { return this.scaleUp(this._canvas.width); }\r\n    public get lifeHeight() { return this.scaleUp(this._canvas.height); }\r\n    public get lifeRect() { return new LifeRect(this._corner, this.lifeWidth, this.lifeHeight); }\r\n\r\n    public lifeToBitmap(v: LifePoint): Point {\r\n        return {\r\n            x: this.scaleDown(v.x - this._corner.x),\r\n            y: this.scaleDown(this._corner.y - v.y),\r\n        };\r\n    }\r\n\r\n    public bitmapToLife(p: Point): LifePoint {\r\n        return {\r\n            x: this._corner.x + this.scaleUp(p.x),\r\n            y: this._corner.y - this.scaleUp(p.y),\r\n        };\r\n    }\r\n\r\n    public get gridEnabled() { return this._scale <= this._gridScale; }\r\n\r\n    public isValidBitmapPoint(p: Point) {\r\n        return 0 <= p.x && p.x < this._canvas.width && 0 <= p.y && p.y < this._canvas.height;\r\n    }\r\n}","import React from 'react';\r\nimport { VscAdd, VscChromeMinimize } from 'react-icons/vsc';\r\nimport Button from './Button';\r\n\r\nimport './Range.css';\r\n\r\nexport default function Range(props: RangeProperties) {\r\n    return (\r\n        <div className=\"Range\">\r\n            <Button onClick={() => props.onChange(-1)}><VscChromeMinimize /></Button>\r\n            <span className=\"Range_Display\">{props.value}</span>\r\n            <Button onClick={() => props.onChange(1)}><VscAdd /></Button>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface RangeProperties {\r\n    value: number;\r\n    min: number;\r\n    max: number;\r\n    step: number;\r\n\r\n    onChange: (dir: 1 | -1) => void;\r\n}","import React from 'react';\r\n\r\nimport './Select.css';\r\n\r\nexport default function Select(props: SelectProperties) {\r\n    return (\r\n        <select className={`Select ${props.className || ''}`} style={props.style} onChange={props.onChange} value={props.value}>\r\n            {props.children}\r\n        </select>\r\n    );\r\n}\r\n\r\ninterface SelectProperties {\r\n    children?: React.ReactNode | React.ReactNodeArray;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    onChange?: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n    value: string;\r\n}","import React from 'react';\r\nimport { VscDebugRestart, VscDebugStepOver, VscDebugStart, VscDebugPause } from 'react-icons/vsc';\r\nimport Button from './Button';\r\nimport LifeView from './Life/LifeView';\r\nimport { allPatterns, PatternName } from './Life/Patterns';\r\n\r\nimport './LifeComponent.css';\r\nimport Range from './Range';\r\nimport Select from './Select';\r\n\r\ninterface LifeComponentState {\r\n    lifeData?: LifeView;\r\n    selectedPattern: PatternName;\r\n    speed: number;\r\n}\r\n\r\n// https://github.com/ericlippert/ConwaysLife/tree/episode18\r\n// https://ericlippert.com/2020/06/25/life-part-18/\r\nexport class LifeComponent extends React.Component<{}, LifeComponentState> {\r\n\r\n    public constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedPattern: 'puffer2',\r\n            speed: 5,\r\n        };\r\n    }\r\n\r\n    private onPatternChange(ev: React.ChangeEvent<HTMLSelectElement>) {\r\n        if (!this.state.lifeData) return;\r\n\r\n        const selectedPattern = ev.target.value as PatternName;\r\n\r\n        if (this.state.lifeData.running) this.state.lifeData.stop();\r\n        // eslint-disable-next-line\r\n        this.state.lifeData.pattern = allPatterns[selectedPattern];\r\n\r\n        this.setState({ selectedPattern });\r\n    }\r\n\r\n    private onToggleRunning() {\r\n        if (!this.state.lifeData) return;\r\n        if (this.state.lifeData.running) this.state.lifeData.stop();\r\n        else this.state.lifeData.start();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private onReset() {\r\n        if (!this.state.lifeData) return;\r\n\r\n        if (this.state.lifeData.running) this.state.lifeData.stop();\r\n        // eslint-disable-next-line\r\n        this.state.lifeData.pattern = allPatterns[this.state.selectedPattern];\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private onStepForward() {\r\n        if (!this.state.lifeData || this.state.lifeData.running) return;\r\n\r\n        this.state.lifeData.step();\r\n    }\r\n\r\n    private onSpeedChange(dir: 1 | -1) {\r\n        const clamp = (min: number, max: number, val: number) => Math.min(max, Math.max(min, val));\r\n        if (!this.state.lifeData) return;\r\n\r\n        const speed = clamp(0, 15, this.state.speed + dir);\r\n        // eslint-disable-next-line\r\n        this.state.lifeData.tickTime = 1000 / 2**speed;\r\n\r\n        this.setState({ speed });\r\n    }\r\n\r\n    public componentDidMount() {\r\n        const lifeData = new LifeView('lifeCanvas', 1000 / 2**this.state.speed);\r\n        this.setState({ lifeData });\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        this.state.lifeData?.stop();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Life\">\r\n                <canvas className=\"LifeCanvas\" id=\"lifeCanvas\" />\r\n                <div className=\"LifeControls\">\r\n                    <div>\r\n                        <Select value={this.state.selectedPattern} onChange={this.onPatternChange.bind(this)}>\r\n                            {Object.keys(allPatterns).map(key => (\r\n                                <option key={key} value={key}>{key}</option>\r\n                            ))}\r\n                        </Select>\r\n                    </div>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <Button onClick={this.onReset.bind(this)}><VscDebugRestart /></Button>\r\n                        <Button onClick={this.onToggleRunning.bind(this)}>{this.state.lifeData?.running ? <VscDebugPause /> : <VscDebugStart />}</Button>\r\n                        <Button onClick={this.onStepForward.bind(this)}><VscDebugStepOver /></Button>\r\n                    </div>\r\n                    <Range min={0} max={15} step={1} value={this.state.speed} onChange={this.onSpeedChange.bind(this)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { LifeComponent } from './LifeComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LifeComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}